<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1100</width>
    <height>755</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow {
	background-color: rgb(0, 0, 0);
	border-radius: 5px;
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="WOpengl" name="Widget">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>0</y>
      <width>1101</width>
      <height>761</height>
     </rect>
    </property>
    <widget class="QPushButton" name="pushButton_Open">
     <property name="geometry">
      <rect>
       <x>20</x>
       <y>10</y>
       <width>101</width>
       <height>41</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(243, 114, 32);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
  color: rgb(0, 0, 0);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>Open</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_colBack">
     <property name="geometry">
      <rect>
       <x>360</x>
       <y>20</y>
       <width>111</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
     </property>
     <property name="text">
      <string>Color</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_colLines">
     <property name="geometry">
      <rect>
       <x>610</x>
       <y>20</y>
       <width>111</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
     </property>
     <property name="text">
      <string>Color</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_colDots">
     <property name="geometry">
      <rect>
       <x>860</x>
       <y>20</y>
       <width>111</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
     </property>
     <property name="text">
      <string>Color</string>
     </property>
    </widget>
    <widget class="QLabel" name="textureL">
     <property name="geometry">
      <rect>
       <x>-10</x>
       <y>670</y>
       <width>151</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
     </property>
     <property name="text">
      <string>Texture</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_setTexture">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>700</y>
       <width>111</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
     </property>
     <property name="text">
      <string>Set</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_removeTexture">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>730</y>
       <width>111</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
     </property>
     <property name="text">
      <string>Remove</string>
     </property>
    </widget>
    <widget class="QLabel" name="Display_typeL">
     <property name="geometry">
      <rect>
       <x>110</x>
       <y>670</y>
       <width>151</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
     </property>
     <property name="text">
      <string>Display type</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QComboBox" name="comboBox_DisplayType">
     <property name="geometry">
      <rect>
       <x>130</x>
       <y>700</y>
       <width>111</width>
       <height>22</height>
      </rect>
     </property>
     <property name="font">
      <font>
       <family>Comic Sans MS</family>
       <pointsize>10</pointsize>
       <italic>false</italic>
       <bold>false</bold>
      </font>
     </property>
     <property name="styleSheet">
      <string notr="true">QComboBox {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}

QComboBox::drop-down  {
  height: 16px;
 width: 16px;
 subcontrol-position: center right;

border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QComboBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}</string>
     </property>
     <property name="currentText">
      <string>Frame</string>
     </property>
     <property name="sizeAdjustPolicy">
      <enum>QComboBox::AdjustToContentsOnFirstShow</enum>
     </property>
     <item>
      <property name="text">
       <string>Frame</string>
      </property>
     </item>
     <item>
      <property name="text">
       <string>Soft shading</string>
      </property>
     </item>
     <item>
      <property name="text">
       <string>Flat shading</string>
      </property>
     </item>
    </widget>
    <widget class="QLabel" name="SurfaceL">
     <property name="geometry">
      <rect>
       <x>370</x>
       <y>40</y>
       <width>91</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
     </property>
     <property name="text">
      <string>Surface</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_colSurface">
     <property name="geometry">
      <rect>
       <x>360</x>
       <y>60</y>
       <width>111</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
     </property>
     <property name="text">
      <string>Color</string>
     </property>
    </widget>
    <widget class="QLabel" name="LightL">
     <property name="geometry">
      <rect>
       <x>490</x>
       <y>40</y>
       <width>91</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
     </property>
     <property name="text">
      <string>Light</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_colLight">
     <property name="geometry">
      <rect>
       <x>480</x>
       <y>60</y>
       <width>111</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
     </property>
     <property name="text">
      <string>Color</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_Reset">
     <property name="geometry">
      <rect>
       <x>250</x>
       <y>730</y>
       <width>111</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
     </property>
     <property name="text">
      <string>Reset </string>
     </property>
    </widget>
    <widget class="QLabel" name="Display_typeL_2">
     <property name="geometry">
      <rect>
       <x>610</x>
       <y>40</y>
       <width>111</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
     </property>
     <property name="text">
      <string>Light power</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QDoubleSpinBox" name="doubleSpinBox_PowerLight">
     <property name="geometry">
      <rect>
       <x>610</x>
       <y>60</y>
       <width>111</width>
       <height>22</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QDoubleSpinBox {
background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QDoubleSpinBox:down-button  {
height: 16px;
 width: 16px;
 subcontrol-position: center left;
border-color: rgb(243, 114, 32);
border-style: solid;
 border-width:1px;
 border-radius:9px;
}

QDoubleSpinBox::up-button  {
 height: 16px;
 width: 16px;
 subcontrol-position: center right;
border-color: rgb(243, 114, 32);
border-style: solid;
 border-width:1px;
 border-radius:9px;
}

QDoubleSpinBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::down-button:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QDoubleSpinBox::up-button:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}
</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
     <property name="minimum">
      <double>1.000000000000000</double>
     </property>
     <property name="maximum">
      <double>20.000000000000000</double>
     </property>
     <property name="singleStep">
      <double>1.000000000000000</double>
     </property>
    </widget>
    <widget class="QLabel" name="label_17">
     <property name="geometry">
      <rect>
       <x>610</x>
       <y>60</y>
       <width>21</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color: rgb(243, 114, 32);</string>
     </property>
     <property name="text">
      <string>🠄</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QLabel" name="textureL_2">
     <property name="geometry">
      <rect>
       <x>240</x>
       <y>650</y>
       <width>131</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
     </property>
     <property name="text">
      <string>Settings</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_SaveSet">
     <property name="geometry">
      <rect>
       <x>250</x>
       <y>670</y>
       <width>111</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
     </property>
     <property name="text">
      <string>Save</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_LoadSet">
     <property name="geometry">
      <rect>
       <x>250</x>
       <y>700</y>
       <width>111</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
     </property>
     <property name="text">
      <string>Load</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_moveY">
     <property name="geometry">
      <rect>
       <x>650</x>
       <y>680</y>
       <width>31</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>Y</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_moveZ">
     <property name="geometry">
      <rect>
       <x>700</x>
       <y>680</y>
       <width>31</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>Z</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_3">
     <property name="geometry">
      <rect>
       <x>610</x>
       <y>710</y>
       <width>111</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
     </property>
     <property name="text">
      <string>Moving</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QDoubleSpinBox" name="doubleSpinBox_Move">
     <property name="geometry">
      <rect>
       <x>600</x>
       <y>730</y>
       <width>131</width>
       <height>22</height>
      </rect>
     </property>
     <property name="toolTip">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Moving&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="styleSheet">
      <string notr="true">QDoubleSpinBox {
background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QDoubleSpinBox:down-button  {
height: 16px;
 width: 16px;
 subcontrol-position: center left;
border-color: rgb(243, 114, 32);
border-style: solid;
 border-width:1px;
 border-radius:9px;
}

QDoubleSpinBox::up-button  {
 height: 16px;
 width: 16px;
 subcontrol-position: center right;
border-color: rgb(243, 114, 32);
border-style: solid;
 border-width:1px;
 border-radius:9px;
}

QDoubleSpinBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::down-button:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QDoubleSpinBox::up-button:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
     <property name="minimum">
      <double>-100.000000000000000</double>
     </property>
     <property name="maximum">
      <double>100.000000000000000</double>
     </property>
     <property name="singleStep">
      <double>0.100000000000000</double>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_moveX">
     <property name="geometry">
      <rect>
       <x>600</x>
       <y>680</y>
       <width>31</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>X</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_12">
     <property name="geometry">
      <rect>
       <x>710</x>
       <y>730</y>
       <width>20</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color: rgb(243, 114, 32);</string>
     </property>
     <property name="text">
      <string>🠆</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_rotZ">
     <property name="geometry">
      <rect>
       <x>470</x>
       <y>680</y>
       <width>31</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>Z</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_rotY">
     <property name="geometry">
      <rect>
       <x>420</x>
       <y>680</y>
       <width>31</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>Y</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_rotX">
     <property name="geometry">
      <rect>
       <x>370</x>
       <y>680</y>
       <width>31</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>X</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_lightLeft">
     <property name="geometry">
      <rect>
       <x>760</x>
       <y>710</y>
       <width>51</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>🠄</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_lightDown">
     <property name="geometry">
      <rect>
       <x>850</x>
       <y>730</y>
       <width>51</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>🠇</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_lightUp">
     <property name="geometry">
      <rect>
       <x>830</x>
       <y>690</y>
       <width>51</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>🠅</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_23">
     <property name="geometry">
      <rect>
       <x>810</x>
       <y>710</y>
       <width>111</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
     </property>
     <property name="text">
      <string>Light position</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_lightRight">
     <property name="geometry">
      <rect>
       <x>920</x>
       <y>710</y>
       <width>51</width>
       <height>21</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
     </property>
     <property name="text">
      <string>🠆</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_18">
     <property name="geometry">
      <rect>
       <x>700</x>
       <y>60</y>
       <width>20</width>
       <height>20</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color: rgb(243, 114, 32);</string>
     </property>
     <property name="text">
      <string>🠆</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
   </widget>
   <widget class="QPushButton" name="pushButton_Gif">
    <property name="geometry">
     <rect>
      <x>990</x>
      <y>680</y>
      <width>101</width>
      <height>29</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
  background-color: rgb(130, 130, 130);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
    </property>
    <property name="text">
     <string>Save Gif</string>
    </property>
   </widget>
   <widget class="QPushButton" name="pushButton_Image">
    <property name="geometry">
     <rect>
      <x>990</x>
      <y>720</y>
      <width>101</width>
      <height>29</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
  background-color: rgb(130, 130, 130);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}
</string>
    </property>
    <property name="text">
     <string>Screenshot</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_filepath">
    <property name="geometry">
     <rect>
      <x>220</x>
      <y>70</y>
      <width>121</width>
      <height>22</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  background-color: rgb(100, 100, 100);
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  border: 2px gray;
  border-radius: 8px;
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
   </widget>
   <widget class="QLabel" name="label_vertex">
    <property name="geometry">
     <rect>
      <x>220</x>
      <y>10</y>
      <width>121</width>
      <height>22</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  background-color: rgb(100, 100, 100);
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  border: 2px gray;
  border-radius: 10px;
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_edges">
    <property name="geometry">
     <rect>
      <x>220</x>
      <y>40</y>
      <width>121</width>
      <height>22</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  background-color: rgb(100, 100, 100);
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  border: 2px gray;
  border-radius: 10px;
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string/>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QPushButton" name="pushButton_sizeM">
    <property name="geometry">
     <rect>
      <x>510</x>
      <y>700</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 20pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
    </property>
    <property name="text">
     <string>-</string>
    </property>
   </widget>
   <widget class="QPushButton" name="pushButton_sizeP">
    <property name="geometry">
     <rect>
      <x>560</x>
      <y>700</y>
      <width>31</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 20pt &quot;Comic Sans MS&quot;;
  border-radius: 10px;
color: rgb(239, 239, 239);
}
QPushButton:pressed {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                      stop: 0 #BEBEBE, stop: 1 #D7D7D7);
}</string>
    </property>
    <property name="text">
     <string>+</string>
    </property>
   </widget>
   <widget class="QDoubleSpinBox" name="doubleSpinBox_Rotate">
    <property name="geometry">
     <rect>
      <x>370</x>
      <y>730</y>
      <width>131</width>
      <height>22</height>
     </rect>
    </property>
    <property name="toolTip">
     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Rotate&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
    </property>
    <property name="styleSheet">
     <string notr="true">QDoubleSpinBox {
background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QDoubleSpinBox:down-button  {
height: 16px;
 width: 16px;
 subcontrol-position: center left;
border-color: rgb(243, 114, 32);
border-style: solid;
 border-width:1px;
 border-radius:9px;
}

QDoubleSpinBox::up-button  {
 height: 16px;
 width: 16px;
 subcontrol-position: center right;
border-color: rgb(243, 114, 32);
border-style: solid;
 border-width:1px;
 border-radius:9px;
}

QDoubleSpinBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::down-button:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QDoubleSpinBox::up-button:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
    <property name="minimum">
     <double>-100.000000000000000</double>
    </property>
    <property name="maximum">
     <double>100.000000000000000</double>
    </property>
    <property name="singleStep">
     <double>0.100000000000000</double>
    </property>
   </widget>
   <widget class="QLabel" name="label_1">
    <property name="geometry">
     <rect>
      <x>380</x>
      <y>710</y>
      <width>111</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string>Rotating</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_2">
    <property name="geometry">
     <rect>
      <x>510</x>
      <y>730</y>
      <width>81</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string>Size</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QDoubleSpinBox" name="doubleSpinBox_SizeLine">
    <property name="geometry">
     <rect>
      <x>730</x>
      <y>20</y>
      <width>111</width>
      <height>22</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QDoubleSpinBox {
background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QDoubleSpinBox:down-button  {
height: 16px;
 width: 16px;
 subcontrol-position: center left;
border-color: rgb(243, 114, 32);
border-style: solid;
 border-width:1px;
 border-radius:9px;
}

QDoubleSpinBox::up-button  {
 height: 16px;
 width: 16px;
 subcontrol-position: center right;
border-color: rgb(243, 114, 32);
border-style: solid;
 border-width:1px;
 border-radius:9px;
}

QDoubleSpinBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::down-button:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QDoubleSpinBox::up-button:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}
</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
    <property name="minimum">
     <double>1.000000000000000</double>
    </property>
    <property name="maximum">
     <double>20.000000000000000</double>
    </property>
    <property name="singleStep">
     <double>1.000000000000000</double>
    </property>
   </widget>
   <widget class="QDoubleSpinBox" name="doubleSpinBox_SizeVert">
    <property name="geometry">
     <rect>
      <x>980</x>
      <y>20</y>
      <width>111</width>
      <height>22</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QDoubleSpinBox {
background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}
QDoubleSpinBox:down-button  {
height: 16px;
 width: 16px;
 subcontrol-position: center left;
border-color: rgb(243, 114, 32);
border-style: solid;
 border-width:1px;
 border-radius:9px;
}

QDoubleSpinBox::up-button  {
 height: 16px;
 width: 16px;
 subcontrol-position: center right;
border-color: rgb(243, 114, 32);
border-style: solid;
 border-width:1px;
 border-radius:9px;
}

QDoubleSpinBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QDoubleSpinBox::down-button:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QDoubleSpinBox::up-button:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}
</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
    <property name="minimum">
     <double>1.000000000000000</double>
    </property>
    <property name="maximum">
     <double>20.000000000000000</double>
    </property>
    <property name="singleStep">
     <double>1.000000000000000</double>
    </property>
   </widget>
   <widget class="QComboBox" name="comboBox_Vertex">
    <property name="geometry">
     <rect>
      <x>980</x>
      <y>60</y>
      <width>111</width>
      <height>22</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Comic Sans MS</family>
      <pointsize>10</pointsize>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QComboBox {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}

QComboBox::drop-down  {
  height: 16px;
 width: 16px;
 subcontrol-position: center right;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QComboBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}</string>
    </property>
    <property name="sizeAdjustPolicy">
     <enum>QComboBox::AdjustToContentsOnFirstShow</enum>
    </property>
    <item>
     <property name="text">
      <string>Nothing</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Circle</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Square</string>
     </property>
    </item>
   </widget>
   <widget class="QComboBox" name="comboBox_Proection">
    <property name="geometry">
     <rect>
      <x>480</x>
      <y>20</y>
      <width>111</width>
      <height>22</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Comic Sans MS</family>
      <pointsize>10</pointsize>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QComboBox {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}

QComboBox::drop-down  {
  height: 16px;
 width: 16px;
 subcontrol-position: center right;

border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QComboBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}</string>
    </property>
    <property name="sizeAdjustPolicy">
     <enum>QComboBox::AdjustToContentsOnFirstShow</enum>
    </property>
    <item>
     <property name="text">
      <string>Parallel</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Central</string>
     </property>
    </item>
   </widget>
   <widget class="QComboBox" name="comboBox_Lines">
    <property name="geometry">
     <rect>
      <x>730</x>
      <y>60</y>
      <width>111</width>
      <height>22</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Comic Sans MS</family>
      <pointsize>10</pointsize>
      <italic>false</italic>
      <bold>false</bold>
     </font>
    </property>
    <property name="styleSheet">
     <string notr="true">QComboBox {
  background-color: rgb(100, 100, 100);
  border: 2px gray;
  font: 10pt &quot;Comic Sans MS&quot;;
  border-radius: 5px;
  color: rgb(239, 239, 239);
}

QComboBox::drop-down  {
  height: 16px;
 width: 16px;
 subcontrol-position: center right;
border-style: solid;
 border-width:1px;
 border-radius:4px;
}

QComboBox::drop-down:pressed {
color: rgb(144, 143, 146);
border-color: rgb(144, 143, 146);
 border-style: solid;
 border-width:2px;
 border-radius:4px;
}

QComboBox:hover {
color: rgb(230, 230, 230);
background-color: #606060;
border-color: #BEBEBE;
 border-style: solid;
 border-width:1px;
 border-radius:4px;
}</string>
    </property>
    <property name="sizeAdjustPolicy">
     <enum>QComboBox::AdjustToContentsOnFirstShow</enum>
    </property>
    <item>
     <property name="text">
      <string>Nothing</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Solid</string>
     </property>
    </item>
    <item>
     <property name="text">
      <string>Dotted</string>
     </property>
    </item>
   </widget>
   <widget class="QLabel" name="label_4">
    <property name="geometry">
     <rect>
      <x>390</x>
      <y>0</y>
      <width>171</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string>Backround</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_5">
    <property name="geometry">
     <rect>
      <x>640</x>
      <y>0</y>
      <width>171</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string>Lines</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_6">
    <property name="geometry">
     <rect>
      <x>890</x>
      <y>0</y>
      <width>171</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string>Dots</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_7">
    <property name="geometry">
     <rect>
      <x>130</x>
      <y>10</y>
      <width>81</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string>Vertices:</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_8">
    <property name="geometry">
     <rect>
      <x>130</x>
      <y>40</y>
      <width>81</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string>Edges:</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_9">
    <property name="geometry">
     <rect>
      <x>730</x>
      <y>20</y>
      <width>21</width>
      <height>21</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(243, 114, 32);</string>
    </property>
    <property name="text">
     <string>🠄</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label">
    <property name="geometry">
     <rect>
      <x>820</x>
      <y>20</y>
      <width>20</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(243, 114, 32);</string>
    </property>
    <property name="text">
     <string>🠆</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_10">
    <property name="geometry">
     <rect>
      <x>1070</x>
      <y>20</y>
      <width>20</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(243, 114, 32);</string>
    </property>
    <property name="text">
     <string>🠆</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_11">
    <property name="geometry">
     <rect>
      <x>980</x>
      <y>20</y>
      <width>21</width>
      <height>21</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(243, 114, 32);</string>
    </property>
    <property name="text">
     <string>🠄</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_13">
    <property name="geometry">
     <rect>
      <x>600</x>
      <y>730</y>
      <width>21</width>
      <height>21</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(243, 114, 32);</string>
    </property>
    <property name="text">
     <string>🠄</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_14">
    <property name="geometry">
     <rect>
      <x>370</x>
      <y>730</y>
      <width>21</width>
      <height>21</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(243, 114, 32);</string>
    </property>
    <property name="text">
     <string>🠄</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_15">
    <property name="geometry">
     <rect>
      <x>480</x>
      <y>730</y>
      <width>20</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">color: rgb(243, 114, 32);</string>
    </property>
    <property name="text">
     <string>🠆</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_16">
    <property name="geometry">
     <rect>
      <x>130</x>
      <y>70</y>
      <width>81</width>
      <height>20</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QLabel {
  font: 10pt &quot;Comic Sans MS&quot;;
  qproperty-alignment: 'AlignVCenter | AlignHCenter';
  color: rgb(239, 239, 239);
}
</string>
    </property>
    <property name="text">
     <string>Name:</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
  </widget>
 </widget>
 <customwidgets>
  <customwidget>
   <class>WOpengl</class>
   <extends>QOpenGLWidget</extends>
   <header>wopengl.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
